<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="styles/style.css" />
    <link rel="icon" type="image/png" href="assets/icons/favicon.png" />
    <title>Trafikatt</title>
  </head>
  <body>
    <%- include('../partials/header') %>
    <main>
      <button type="button" id="randomButton">Random a station</button>
      <div id="station-name">Data is displayed here</div>
      <div id="result">
        <span>
          Imagine a world where you can navigate the urban jungle with the
          agility and curiosity of a cat, exploring new destinations with ease
          and spontaneity. Welcome to Trafikatt, the innovative transportation
          platform that lets you travel freely and effortlessly, just like a
          feline on the prowl. With Trafikatt, your journey is no longer bound
          by rigid schedules or predictable routes—instead, it's an adventure
          waiting to unfold.
        </span>
        <span>
          <h2>What is Trafikatt?</h2>
          Trafikatt is a cutting-edge transportation app designed to make your
          travel experience seamless, fun, and unpredictable. Whether you're a
          daily commuter or an adventurous explorer, Trafikatt empowers you to
          embrace the unexpected. The app integrates real-time data from SL
          Trafiks API, ensuring you have access to accurate and up-to-date
          information about public transportation in your area. How Does
          Trafikatt Work? At the heart of Trafikatt is its unique randomization
          feature.
        </span>
        <span>
          <h2>Here's how it works:</h2>
          <ul>
            <li>
              Randomize Your Journey: Tap the button, and Trafikatt will select
              a random starting station and destination for you.
            </li>
            <li>
              Real-Time Data: The app pulls live data from SL Trafiks API,
              providing you with the fastest and most efficient routes.
            </li>
            <li>
              Explore Freely: Whether it's a hidden gem in your city or a
              bustling hub you've never visited, Trafikatt encourages you to
              step out of your comfort zone and discover new places.
            </li>
          </ul>
        </span>
      </div>
    </main>
    <script>
      $(() => {
        const API_SITES = "https://transport.integration.sl.se/v1/sites";

        const transportIcons = {
          bus: "./assets/bus.png",
          train: "./assets/pedel.png",
          metro: "./assets/metro.png",
          tram: "./assets/tram.png",
          ship: "./assets/ship.png",
        };

        function getLineColor(line) {
          if (!line) return "";
          if (line.toLowerCase().includes("röda")) return "red";
          if (line.toLowerCase().includes("gröna")) return "green";
          if (line.toLowerCase().includes("pendeltåg"))
            return "rgb(246, 38, 239)";
          if (line.toLowerCase().includes("spårväg"))
            return "rgb(181, 181, 181)";
          if (line.toLowerCase().includes("nockeby")) return "rgb(38, 96, 166)";
          if (line.toLowerCase().includes("lidingö")) return "rgb(153, 98, 49)";
          if (line.toLowerCase().includes("tvärbanan"))
            return "rgb(255, 149, 0)";
          if (line.toLowerCase().includes("saltsjö")) return "rgb(0, 195, 255)";
          if (line.toLowerCase().includes("roslags"))
            return "rgb(120, 63, 199)";
          return;
        }

        const getRandomStation = async () => {
          try {
            let hasDepartures = false;
            let data;

            while (!hasDepartures) {
              let randomId = Math.floor(Math.random() * (9999 - 100 + 1)) + 100;
              let response = await fetch(`${API_SITES}/${randomId}/departures`);
              if (!response.ok) {
                console.log(
                  `Station ID ${randomId} not found or error fetching data.`
                );
                continue;
              }
              data = await response.json();

              /* Random station must have at least 1 departure */
              if (data.departures && data.departures.length > 0) {
                hasDepartures = true;
                console.log("Departures found for station ID:", randomId);
              }
            }
            $("#station-name").html(
              `${data.departures[0]["stop_area"]["name"]}`
            );

            $("#result").empty();

            const allDepartures = data.departures;

            allDepartures.forEach((station) => {
              $("#result").append(`
          <div class="result-card">
            <div class="result-card-left">
            <p class="result-station">${station["stop_area"]["name"]} → ${
                station.destination
              }</p>
            <p class="result-time">Departure: ${station.expected.slice(
              11,
              16
            )}</p>
            <div class="result-transport_container">
             <img class="result-transport-mode" src="${
               transportIcons[station.line["transport_mode"].toLowerCase()]
             }" alt="${station.line["transport_mode"]}" />
            <p class="result-transport-designation" style="background-color: ${getLineColor(
              station.line["group_of_lines"]
            )};">
            ${station.line["designation"]}
        </p>
            </div>
          </div>
          <div>
            <p class="result-time-display" style="color: ${
              station.display.toLowerCase() === "nu" ? "red" : ""
            };">${station.display}</p>
          </div>
          </div>`);
            });
          } catch (error) {
            console.log("error messages", error);
          }
        };
        $("#randomButton").on("click", getRandomStation);
      });
    </script>
  </body>
</html>
