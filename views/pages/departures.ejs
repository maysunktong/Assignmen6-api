<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap"
      rel="stylesheet"
    />
    <script src="scripts/departures.js"></script>
    <link rel="stylesheet" href="styles/style.css" />
    <title>Departures</title>
  </head>
  <body>
    <header>
      <h1>Header</h1>
      <%- include('../partials/navigation') %>
    </header>
    <button type="button" id="randomButton">Random a station</button>
    <div id="station-name">Click a button to randomize a station</div>
    <div id="result">
      Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis doloribus
      vitae, accusantium porro fugit voluptatem obcaecati impedit ut ex aliquid
      animi dignissimos aliquam sed, neque nostrum eligendi cupiditate nam cum
      laudantium a nesciunt harum. Laborum architecto aut reiciendis vitae
      omnis, sapiente sint soluta. Fugiat sapiente voluptatibus nemo dolores
      quis veritatis, obcaecati illo accusantium quidem culpa eveniet deleniti
      eaque corrupti est iste eligendi impedit libero debitis cumque! Hic totam
      a neque, cupiditate perferendis sunt nam suscipit omnis tempore eligendi
      sed et modi fugit quam ipsam inventore vero molestiae repudiandae amet
      quas tenetur repellendus, esse natus! Eveniet hic reiciendis neque labore
      deserunt.
    </div>

    <script>
      $(() => {
        const API_SITES = "https://transport.integration.sl.se/v1/sites";

        const transportIcons = {
          bus: "./assets/bus.png",
          train: "./assets/pedel.png",
          metro: "./assets/metro.png",
          tram: "./assets/tram.png",
          ship: "./assets/ship.png",
        };

        function getLineColor(line) {
          if (!line) return "";
          if (line.toLowerCase().includes("röda")) return "red";
          if (line.toLowerCase().includes("gröna")) return "green";
          if (line.toLowerCase().includes("pendeltåg"))
            return "rgb(246, 38, 239)";
          if (line.toLowerCase().includes("spårväg"))
            return "rgb(181, 181, 181)";
          if (line.toLowerCase().includes("nockeby")) return "rgb(38, 96, 166)";
          if (line.toLowerCase().includes("lidingö")) return "rgb(153, 98, 49)";
          if (line.toLowerCase().includes("tvärbanan"))
            return "rgb(255, 149, 0)";
          if (line.toLowerCase().includes("saltsjö")) return "rgb(0, 195, 255)";
          if (line.toLowerCase().includes("roslags"))
            return "rgb(120, 63, 199)";
          return;
        }

        const getRandomStation = async () => {
          try {
            let hasDepartures = false;
            let data;

            while (!hasDepartures) {
              let randomId = Math.floor(Math.random() * (9999 - 100 + 1)) + 100;
              let response = await fetch(`${API_SITES}/${randomId}/departures`);
              if (!response.ok) {
                console.log(
                  `Station ID ${randomId} not found or error fetching data.`
                );
                continue;
              }
              data = await response.json();

              /* Random station must have at least 1 departure */
              if (data.departures && data.departures.length > 0) {
                hasDepartures = true;
                console.log("Departures found for station ID:", randomId);
              }
            }
            $("#station-name").html(
              `${data.departures[0]["stop_area"]["name"]}`
            );

            $("#result").empty();

            const allDepartures = data.departures;

            allDepartures.forEach((station) => {
              $("#result").append(`
          <div class="result-card">
            <div>
            <p class="result-station">${station["stop_area"]["name"]} → ${
                station.destination
              }</p>
            <p class="result-time">Departure: ${station.expected.slice(
              11,
              16
            )}</p>
            <div class="result-transport_container">
             <img class="result-transport-mode" src="${
               transportIcons[station.line["transport_mode"].toLowerCase()]
             }" alt="${station.line["transport_mode"]}" />
            <p class="result-transport-designation" style="background-color: ${getLineColor(
              station.line["group_of_lines"]
            )};">
            ${station.line["designation"]}
        </p>
            </div>
          </div>
          <div>
            <p class="result-time-display" style="color: ${
              station.display.toLowerCase() === "nu" ? "red" : ""
            };">${station.display}</p>
          </div>
          </div>`);
            });
          } catch (error) {
            console.log(error);
          }
        };
        $("#randomButton").on("click", getRandomStation);
      });
    </script>
  </body>
</html>
